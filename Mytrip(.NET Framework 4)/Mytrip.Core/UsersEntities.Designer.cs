//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("usersModel", "FK_mytrip_Membership_mytrip_Users", "mytrip_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Mytrip.Core.mytrip_Users), "mytrip_Membership", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Mytrip.Core.mytrip_Membership), true)]
[assembly: EdmRelationshipAttribute("usersModel", "mytrip_UsersInRoles", "mytrip_Roles", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mytrip.Core.mytrip_Roles), "mytrip_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Mytrip.Core.mytrip_Users))]

#endregion

namespace Mytrip.Core
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class usersEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new usersEntities object using the connection string found in the 'usersEntities' section of the application configuration file.
        /// </summary>
        public usersEntities() : base("name=usersEntities", "usersEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new usersEntities object.
        /// </summary>
        public usersEntities(string connectionString) : base(connectionString, "usersEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new usersEntities object.
        /// </summary>
        public usersEntities(EntityConnection connection) : base(connection, "usersEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<mytrip_Membership> mytrip_Membership
        {
            get
            {
                if ((_mytrip_Membership == null))
                {
                    _mytrip_Membership = base.CreateObjectSet<mytrip_Membership>("mytrip_Membership");
                }
                return _mytrip_Membership;
            }
        }
        private ObjectSet<mytrip_Membership> _mytrip_Membership;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<mytrip_Roles> mytrip_Roles
        {
            get
            {
                if ((_mytrip_Roles == null))
                {
                    _mytrip_Roles = base.CreateObjectSet<mytrip_Roles>("mytrip_Roles");
                }
                return _mytrip_Roles;
            }
        }
        private ObjectSet<mytrip_Roles> _mytrip_Roles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<mytrip_Users> mytrip_Users
        {
            get
            {
                if ((_mytrip_Users == null))
                {
                    _mytrip_Users = base.CreateObjectSet<mytrip_Users>("mytrip_Users");
                }
                return _mytrip_Users;
            }
        }
        private ObjectSet<mytrip_Users> _mytrip_Users;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the mytrip_Membership EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTomytrip_Membership(mytrip_Membership mytrip_Membership)
        {
            base.AddObject("mytrip_Membership", mytrip_Membership);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the mytrip_Roles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTomytrip_Roles(mytrip_Roles mytrip_Roles)
        {
            base.AddObject("mytrip_Roles", mytrip_Roles);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the mytrip_Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTomytrip_Users(mytrip_Users mytrip_Users)
        {
            base.AddObject("mytrip_Users", mytrip_Users);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="usersModel", Name="mytrip_Membership")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class mytrip_Membership : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new mytrip_Membership object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="passwordSalt">Initial value of the PasswordSalt property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="isApproved">Initial value of the IsApproved property.</param>
        /// <param name="creationDate">Initial value of the CreationDate property.</param>
        /// <param name="lastLockoutDate">Initial value of the LastLockoutDate property.</param>
        /// <param name="lastLoginDate">Initial value of the LastLoginDate property.</param>
        /// <param name="lastPasswordChangedDate">Initial value of the LastPasswordChangedDate property.</param>
        /// <param name="userIP">Initial value of the UserIP property.</param>
        public static mytrip_Membership Createmytrip_Membership(global::System.String userId, global::System.String password, global::System.String passwordSalt, global::System.String email, global::System.Boolean isApproved, global::System.DateTime creationDate, global::System.DateTime lastLockoutDate, global::System.DateTime lastLoginDate, global::System.DateTime lastPasswordChangedDate, global::System.String userIP)
        {
            mytrip_Membership mytrip_Membership = new mytrip_Membership();
            mytrip_Membership.UserId = userId;
            mytrip_Membership.Password = password;
            mytrip_Membership.PasswordSalt = passwordSalt;
            mytrip_Membership.Email = email;
            mytrip_Membership.IsApproved = isApproved;
            mytrip_Membership.CreationDate = creationDate;
            mytrip_Membership.LastLockoutDate = lastLockoutDate;
            mytrip_Membership.LastLoginDate = lastLoginDate;
            mytrip_Membership.LastPasswordChangedDate = lastPasswordChangedDate;
            mytrip_Membership.UserIP = userIP;
            return mytrip_Membership;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.String _UserId;
        partial void OnUserIdChanging(global::System.String value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PasswordSalt
        {
            get
            {
                return _PasswordSalt;
            }
            set
            {
                OnPasswordSaltChanging(value);
                ReportPropertyChanging("PasswordSalt");
                _PasswordSalt = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PasswordSalt");
                OnPasswordSaltChanged();
            }
        }
        private global::System.String _PasswordSalt;
        partial void OnPasswordSaltChanging(global::System.String value);
        partial void OnPasswordSaltChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsApproved
        {
            get
            {
                return _IsApproved;
            }
            set
            {
                OnIsApprovedChanging(value);
                ReportPropertyChanging("IsApproved");
                _IsApproved = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsApproved");
                OnIsApprovedChanged();
            }
        }
        private global::System.Boolean _IsApproved;
        partial void OnIsApprovedChanging(global::System.Boolean value);
        partial void OnIsApprovedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreationDate
        {
            get
            {
                return _CreationDate;
            }
            set
            {
                OnCreationDateChanging(value);
                ReportPropertyChanging("CreationDate");
                _CreationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreationDate");
                OnCreationDateChanged();
            }
        }
        private global::System.DateTime _CreationDate;
        partial void OnCreationDateChanging(global::System.DateTime value);
        partial void OnCreationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastLockoutDate
        {
            get
            {
                return _LastLockoutDate;
            }
            set
            {
                OnLastLockoutDateChanging(value);
                ReportPropertyChanging("LastLockoutDate");
                _LastLockoutDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastLockoutDate");
                OnLastLockoutDateChanged();
            }
        }
        private global::System.DateTime _LastLockoutDate;
        partial void OnLastLockoutDateChanging(global::System.DateTime value);
        partial void OnLastLockoutDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastLoginDate
        {
            get
            {
                return _LastLoginDate;
            }
            set
            {
                OnLastLoginDateChanging(value);
                ReportPropertyChanging("LastLoginDate");
                _LastLoginDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastLoginDate");
                OnLastLoginDateChanged();
            }
        }
        private global::System.DateTime _LastLoginDate;
        partial void OnLastLoginDateChanging(global::System.DateTime value);
        partial void OnLastLoginDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastPasswordChangedDate
        {
            get
            {
                return _LastPasswordChangedDate;
            }
            set
            {
                OnLastPasswordChangedDateChanging(value);
                ReportPropertyChanging("LastPasswordChangedDate");
                _LastPasswordChangedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastPasswordChangedDate");
                OnLastPasswordChangedDateChanged();
            }
        }
        private global::System.DateTime _LastPasswordChangedDate;
        partial void OnLastPasswordChangedDateChanging(global::System.DateTime value);
        partial void OnLastPasswordChangedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserIP
        {
            get
            {
                return _UserIP;
            }
            set
            {
                OnUserIPChanging(value);
                ReportPropertyChanging("UserIP");
                _UserIP = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserIP");
                OnUserIPChanged();
            }
        }
        private global::System.String _UserIP;
        partial void OnUserIPChanging(global::System.String value);
        partial void OnUserIPChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("usersModel", "FK_mytrip_Membership_mytrip_Users", "mytrip_Users")]
        public mytrip_Users mytrip_Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<mytrip_Users>("usersModel.FK_mytrip_Membership_mytrip_Users", "mytrip_Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<mytrip_Users>("usersModel.FK_mytrip_Membership_mytrip_Users", "mytrip_Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<mytrip_Users> mytrip_UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<mytrip_Users>("usersModel.FK_mytrip_Membership_mytrip_Users", "mytrip_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<mytrip_Users>("usersModel.FK_mytrip_Membership_mytrip_Users", "mytrip_Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="usersModel", Name="mytrip_Roles")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class mytrip_Roles : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new mytrip_Roles object.
        /// </summary>
        /// <param name="roleId">Initial value of the RoleId property.</param>
        /// <param name="roleName">Initial value of the RoleName property.</param>
        public static mytrip_Roles Createmytrip_Roles(global::System.Int32 roleId, global::System.String roleName)
        {
            mytrip_Roles mytrip_Roles = new mytrip_Roles();
            mytrip_Roles.RoleId = roleId;
            mytrip_Roles.RoleName = roleName;
            return mytrip_Roles;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleId
        {
            get
            {
                return _RoleId;
            }
            set
            {
                if (_RoleId != value)
                {
                    OnRoleIdChanging(value);
                    ReportPropertyChanging("RoleId");
                    _RoleId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoleId");
                    OnRoleIdChanged();
                }
            }
        }
        private global::System.Int32 _RoleId;
        partial void OnRoleIdChanging(global::System.Int32 value);
        partial void OnRoleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoleName
        {
            get
            {
                return _RoleName;
            }
            set
            {
                OnRoleNameChanging(value);
                ReportPropertyChanging("RoleName");
                _RoleName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RoleName");
                OnRoleNameChanged();
            }
        }
        private global::System.String _RoleName;
        partial void OnRoleNameChanging(global::System.String value);
        partial void OnRoleNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("usersModel", "mytrip_UsersInRoles", "mytrip_Users")]
        public EntityCollection<mytrip_Users> mytrip_Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<mytrip_Users>("usersModel.mytrip_UsersInRoles", "mytrip_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<mytrip_Users>("usersModel.mytrip_UsersInRoles", "mytrip_Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="usersModel", Name="mytrip_Users")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class mytrip_Users : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new mytrip_Users object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="lastActivityDate">Initial value of the LastActivityDate property.</param>
        public static mytrip_Users Createmytrip_Users(global::System.String userId, global::System.String userName, global::System.DateTime lastActivityDate)
        {
            mytrip_Users mytrip_Users = new mytrip_Users();
            mytrip_Users.UserId = userId;
            mytrip_Users.UserName = userName;
            mytrip_Users.LastActivityDate = lastActivityDate;
            return mytrip_Users;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.String _UserId;
        partial void OnUserIdChanging(global::System.String value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastActivityDate
        {
            get
            {
                return _LastActivityDate;
            }
            set
            {
                OnLastActivityDateChanging(value);
                ReportPropertyChanging("LastActivityDate");
                _LastActivityDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastActivityDate");
                OnLastActivityDateChanged();
            }
        }
        private global::System.DateTime _LastActivityDate;
        partial void OnLastActivityDateChanging(global::System.DateTime value);
        partial void OnLastActivityDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("usersModel", "FK_mytrip_Membership_mytrip_Users", "mytrip_Membership")]
        public mytrip_Membership mytrip_Membership
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<mytrip_Membership>("usersModel.FK_mytrip_Membership_mytrip_Users", "mytrip_Membership").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<mytrip_Membership>("usersModel.FK_mytrip_Membership_mytrip_Users", "mytrip_Membership").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<mytrip_Membership> mytrip_MembershipReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<mytrip_Membership>("usersModel.FK_mytrip_Membership_mytrip_Users", "mytrip_Membership");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<mytrip_Membership>("usersModel.FK_mytrip_Membership_mytrip_Users", "mytrip_Membership", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("usersModel", "mytrip_UsersInRoles", "mytrip_Roles")]
        public EntityCollection<mytrip_Roles> mytrip_Roles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<mytrip_Roles>("usersModel.mytrip_UsersInRoles", "mytrip_Roles");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<mytrip_Roles>("usersModel.mytrip_UsersInRoles", "mytrip_Roles", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
