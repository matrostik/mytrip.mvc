//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace Mytrip.Articles.Repository.DataEntities
{
    public partial class mytrip_articlescategory
    {
        #region Primitive Properties
    
        public virtual bool AllCulture
        {
            get;
            set;
        }
    
        public virtual bool Blog
        {
            get;
            set;
        }
    
        public virtual int CategoryId
        {
            get;
            set;
        }
    
        public virtual System.DateTime CreateDate
        {
            get;
            set;
        }
    
        public virtual string Culture
        {
            get;
            set;
        }
    
        public virtual string Path
        {
            get;
            set;
        }
    
        public virtual bool SeparateBlock
        {
            get;
            set;
        }
    
        public virtual int SubCategoryId
        {
            get { return _subCategoryId; }
            set
            {
                if (_subCategoryId != value)
                {
                    if (mytrip_articlescategory2 != null && mytrip_articlescategory2.CategoryId != value)
                    {
                        mytrip_articlescategory2 = null;
                    }
                    _subCategoryId = value;
                }
            }
        }
        private int _subCategoryId;
    
        public virtual string Title
        {
            get;
            set;
        }
    
        public virtual string UserEmail
        {
            get;
            set;
        }
    
        public virtual string UserName
        {
            get;
            set;
        }
    
        public virtual int Views
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual ICollection<mytrip_articles> mytrip_articles
        {
            get
            {
                if (_mytrip_articles == null)
                {
                    var newCollection = new FixupCollection<mytrip_articles>();
                    newCollection.CollectionChanged += Fixupmytrip_articles;
                    _mytrip_articles = newCollection;
                }
                return _mytrip_articles;
            }
            set
            {
                if (!ReferenceEquals(_mytrip_articles, value))
                {
                    var previousValue = _mytrip_articles as FixupCollection<mytrip_articles>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= Fixupmytrip_articles;
                    }
                    _mytrip_articles = value;
                    var newValue = value as FixupCollection<mytrip_articles>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += Fixupmytrip_articles;
                    }
                }
            }
        }
        private ICollection<mytrip_articles> _mytrip_articles;
    
        public virtual ICollection<mytrip_articlescategory> mytrip_articlescategory1
        {
            get
            {
                if (_mytrip_articlescategory1 == null)
                {
                    var newCollection = new FixupCollection<mytrip_articlescategory>();
                    newCollection.CollectionChanged += Fixupmytrip_articlescategory1;
                    _mytrip_articlescategory1 = newCollection;
                }
                return _mytrip_articlescategory1;
            }
            set
            {
                if (!ReferenceEquals(_mytrip_articlescategory1, value))
                {
                    var previousValue = _mytrip_articlescategory1 as FixupCollection<mytrip_articlescategory>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= Fixupmytrip_articlescategory1;
                    }
                    _mytrip_articlescategory1 = value;
                    var newValue = value as FixupCollection<mytrip_articlescategory>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += Fixupmytrip_articlescategory1;
                    }
                }
            }
        }
        private ICollection<mytrip_articlescategory> _mytrip_articlescategory1;
    
        public virtual mytrip_articlescategory mytrip_articlescategory2
        {
            get { return _mytrip_articlescategory2; }
            set
            {
                if (!ReferenceEquals(_mytrip_articlescategory2, value))
                {
                    var previousValue = _mytrip_articlescategory2;
                    _mytrip_articlescategory2 = value;
                    Fixupmytrip_articlescategory2(previousValue);
                }
            }
        }
        private mytrip_articlescategory _mytrip_articlescategory2;

        #endregion
        #region Association Fixup
    
        private void Fixupmytrip_articlescategory2(mytrip_articlescategory previousValue)
        {
            if (previousValue != null && previousValue.mytrip_articlescategory1.Contains(this))
            {
                previousValue.mytrip_articlescategory1.Remove(this);
            }
    
            if (mytrip_articlescategory2 != null)
            {
                if (!mytrip_articlescategory2.mytrip_articlescategory1.Contains(this))
                {
                    mytrip_articlescategory2.mytrip_articlescategory1.Add(this);
                }
                if (SubCategoryId != mytrip_articlescategory2.CategoryId)
                {
                    SubCategoryId = mytrip_articlescategory2.CategoryId;
                }
            }
        }
    
        private void Fixupmytrip_articles(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (mytrip_articles item in e.NewItems)
                {
                    item.mytrip_articlescategory = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (mytrip_articles item in e.OldItems)
                {
                    if (ReferenceEquals(item.mytrip_articlescategory, this))
                    {
                        item.mytrip_articlescategory = null;
                    }
                }
            }
        }
    
        private void Fixupmytrip_articlescategory1(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (mytrip_articlescategory item in e.NewItems)
                {
                    item.mytrip_articlescategory2 = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (mytrip_articlescategory item in e.OldItems)
                {
                    if (ReferenceEquals(item.mytrip_articlescategory2, this))
                    {
                        item.mytrip_articlescategory2 = null;
                    }
                }
            }
        }

        #endregion
    }
}
