//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace Mytrip.Store.Repository.DataEntities
{
    public partial class mytrip_storeproduct
    {
        #region Primitive Properties
    
        public virtual int ProductId
        {
            get;
            set;
        }
    
        public virtual int DepartmentId
        {
            get { return _departmentId; }
            set
            {
                if (_departmentId != value)
                {
                    if (mytrip_storedepartment != null && mytrip_storedepartment.DepartmentId != value)
                    {
                        mytrip_storedepartment = null;
                    }
                    _departmentId = value;
                }
            }
        }
        private int _departmentId;
    
        public virtual int ProducerId
        {
            get { return _producerId; }
            set
            {
                if (_producerId != value)
                {
                    if (mytrip_storeproducer != null && mytrip_storeproducer.ProducerId != value)
                    {
                        mytrip_storeproducer = null;
                    }
                    _producerId = value;
                }
            }
        }
        private int _producerId;
    
        public virtual string Title
        {
            get;
            set;
        }
    
        public virtual string Path
        {
            get;
            set;
        }
    
        public virtual string Body
        {
            get;
            set;
        }
    
        public virtual string Abstract
        {
            get;
            set;
        }
    
        public virtual System.DateTime CreationDate
        {
            get;
            set;
        }
    
        public virtual string UserName
        {
            get;
            set;
        }
    
        public virtual string Culture
        {
            get;
            set;
        }
    
        public virtual bool AllCulture
        {
            get;
            set;
        }
    
        public virtual decimal Price
        {
            get;
            set;
        }
    
        public virtual decimal TotalVotes
        {
            get;
            set;
        }
    
        public virtual int TotalCount
        {
            get;
            set;
        }
    
        public virtual string Image
        {
            get;
            set;
        }
    
        public virtual bool ViewPrice
        {
            get;
            set;
        }
    
        public virtual bool ViewVotes
        {
            get;
            set;
        }
    
        public virtual bool ViewCount
        {
            get;
            set;
        }
    
        public virtual string UrlFile
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual mytrip_storedepartment mytrip_storedepartment
        {
            get { return _mytrip_storedepartment; }
            set
            {
                if (!ReferenceEquals(_mytrip_storedepartment, value))
                {
                    var previousValue = _mytrip_storedepartment;
                    _mytrip_storedepartment = value;
                    Fixupmytrip_storedepartment(previousValue);
                }
            }
        }
        private mytrip_storedepartment _mytrip_storedepartment;
    
        public virtual mytrip_storeproducer mytrip_storeproducer
        {
            get { return _mytrip_storeproducer; }
            set
            {
                if (!ReferenceEquals(_mytrip_storeproducer, value))
                {
                    var previousValue = _mytrip_storeproducer;
                    _mytrip_storeproducer = value;
                    Fixupmytrip_storeproducer(previousValue);
                }
            }
        }
        private mytrip_storeproducer _mytrip_storeproducer;
    
        public virtual ICollection<mytrip_storevotes> mytrip_storevotes
        {
            get
            {
                if (_mytrip_storevotes == null)
                {
                    var newCollection = new FixupCollection<mytrip_storevotes>();
                    newCollection.CollectionChanged += Fixupmytrip_storevotes;
                    _mytrip_storevotes = newCollection;
                }
                return _mytrip_storevotes;
            }
            set
            {
                if (!ReferenceEquals(_mytrip_storevotes, value))
                {
                    var previousValue = _mytrip_storevotes as FixupCollection<mytrip_storevotes>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= Fixupmytrip_storevotes;
                    }
                    _mytrip_storevotes = value;
                    var newValue = value as FixupCollection<mytrip_storevotes>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += Fixupmytrip_storevotes;
                    }
                }
            }
        }
        private ICollection<mytrip_storevotes> _mytrip_storevotes;
    
        public virtual ICollection<mytrip_storeoptions> mytrip_storeoptions
        {
            get
            {
                if (_mytrip_storeoptions == null)
                {
                    var newCollection = new FixupCollection<mytrip_storeoptions>();
                    newCollection.CollectionChanged += Fixupmytrip_storeoptions;
                    _mytrip_storeoptions = newCollection;
                }
                return _mytrip_storeoptions;
            }
            set
            {
                if (!ReferenceEquals(_mytrip_storeoptions, value))
                {
                    var previousValue = _mytrip_storeoptions as FixupCollection<mytrip_storeoptions>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= Fixupmytrip_storeoptions;
                    }
                    _mytrip_storeoptions = value;
                    var newValue = value as FixupCollection<mytrip_storeoptions>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += Fixupmytrip_storeoptions;
                    }
                }
            }
        }
        private ICollection<mytrip_storeoptions> _mytrip_storeoptions;

        #endregion
        #region Association Fixup
    
        private void Fixupmytrip_storedepartment(mytrip_storedepartment previousValue)
        {
            if (previousValue != null && previousValue.mytrip_storeproduct.Contains(this))
            {
                previousValue.mytrip_storeproduct.Remove(this);
            }
    
            if (mytrip_storedepartment != null)
            {
                if (!mytrip_storedepartment.mytrip_storeproduct.Contains(this))
                {
                    mytrip_storedepartment.mytrip_storeproduct.Add(this);
                }
                if (DepartmentId != mytrip_storedepartment.DepartmentId)
                {
                    DepartmentId = mytrip_storedepartment.DepartmentId;
                }
            }
        }
    
        private void Fixupmytrip_storeproducer(mytrip_storeproducer previousValue)
        {
            if (previousValue != null && previousValue.mytrip_storeproduct.Contains(this))
            {
                previousValue.mytrip_storeproduct.Remove(this);
            }
    
            if (mytrip_storeproducer != null)
            {
                if (!mytrip_storeproducer.mytrip_storeproduct.Contains(this))
                {
                    mytrip_storeproducer.mytrip_storeproduct.Add(this);
                }
                if (ProducerId != mytrip_storeproducer.ProducerId)
                {
                    ProducerId = mytrip_storeproducer.ProducerId;
                }
            }
        }
    
        private void Fixupmytrip_storevotes(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (mytrip_storevotes item in e.NewItems)
                {
                    item.mytrip_storeproduct = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (mytrip_storevotes item in e.OldItems)
                {
                    if (ReferenceEquals(item.mytrip_storeproduct, this))
                    {
                        item.mytrip_storeproduct = null;
                    }
                }
            }
        }
    
        private void Fixupmytrip_storeoptions(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (mytrip_storeoptions item in e.NewItems)
                {
                    item.mytrip_storeproduct = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (mytrip_storeoptions item in e.OldItems)
                {
                    if (ReferenceEquals(item.mytrip_storeproduct, this))
                    {
                        item.mytrip_storeproduct = null;
                    }
                }
            }
        }

        #endregion
    }
}
