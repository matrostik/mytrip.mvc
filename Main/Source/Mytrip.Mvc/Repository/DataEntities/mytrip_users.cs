//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace Mytrip.Mvc.Repository.DataEntities
{
    public partial class mytrip_users
    {
        #region Primitive Properties
    
        public virtual System.DateTime LastActivityDate
        {
            get;
            set;
        }
    
        public virtual string UserId
        {
            get;
            set;
        }
    
        public virtual string UserName
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual mytrip_usersmembership mytrip_usersmembership
        {
            get { return _mytrip_usersmembership; }
            set
            {
                if (!ReferenceEquals(_mytrip_usersmembership, value))
                {
                    var previousValue = _mytrip_usersmembership;
                    _mytrip_usersmembership = value;
                    Fixupmytrip_usersmembership(previousValue);
                }
            }
        }
        private mytrip_usersmembership _mytrip_usersmembership;
    
        public virtual ICollection<mytrip_usersroles> mytrip_usersroles
        {
            get
            {
                if (_mytrip_usersroles == null)
                {
                    var newCollection = new FixupCollection<mytrip_usersroles>();
                    newCollection.CollectionChanged += Fixupmytrip_usersroles;
                    _mytrip_usersroles = newCollection;
                }
                return _mytrip_usersroles;
            }
            set
            {
                if (!ReferenceEquals(_mytrip_usersroles, value))
                {
                    var previousValue = _mytrip_usersroles as FixupCollection<mytrip_usersroles>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= Fixupmytrip_usersroles;
                    }
                    _mytrip_usersroles = value;
                    var newValue = value as FixupCollection<mytrip_usersroles>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += Fixupmytrip_usersroles;
                    }
                }
            }
        }
        private ICollection<mytrip_usersroles> _mytrip_usersroles;

        #endregion
        #region Association Fixup
    
        private void Fixupmytrip_usersmembership(mytrip_usersmembership previousValue)
        {
            if (previousValue != null && ReferenceEquals(previousValue.mytrip_users, this))
            {
                previousValue.mytrip_users = null;
            }
    
            if (mytrip_usersmembership != null)
            {
                mytrip_usersmembership.mytrip_users = this;
            }
        }
    
        private void Fixupmytrip_usersroles(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (mytrip_usersroles item in e.NewItems)
                {
                    if (!item.mytrip_users.Contains(this))
                    {
                        item.mytrip_users.Add(this);
                    }
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (mytrip_usersroles item in e.OldItems)
                {
                    if (item.mytrip_users.Contains(this))
                    {
                        item.mytrip_users.Remove(this);
                    }
                }
            }
        }

        #endregion
    }
}
