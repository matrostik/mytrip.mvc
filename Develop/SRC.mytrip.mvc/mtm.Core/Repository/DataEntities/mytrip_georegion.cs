//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace mtm.Core.Repository.DataEntities
{
    public partial class mytrip_georegion
    {
        #region Primitive Properties
    
        public virtual int RegionId
        {
            get;
            set;
        }
    
        public virtual int CountryId
        {
            get { return _countryId; }
            set
            {
                if (_countryId != value)
                {
                    if (mytrip_geocountry != null && mytrip_geocountry.CountryId != value)
                    {
                        mytrip_geocountry = null;
                    }
                    _countryId = value;
                }
            }
        }
        private int _countryId;
    
        public virtual string Code
        {
            get;
            set;
        }
    
        public virtual string Name
        {
            get;
            set;
        }
    
        public virtual Nullable<decimal> Longitude
        {
            get;
            set;
        }
    
        public virtual Nullable<decimal> Latitude
        {
            get;
            set;
        }
    
        public virtual bool EditAdmin
        {
            get;
            set;
        }
    
        public virtual bool EditUser
        {
            get;
            set;
        }

        #endregion
        #region Navigation Properties
    
        public virtual ICollection<mytrip_geocity> mytrip_geocity
        {
            get
            {
                if (_mytrip_geocity == null)
                {
                    var newCollection = new FixupCollection<mytrip_geocity>();
                    newCollection.CollectionChanged += Fixupmytrip_geocity;
                    _mytrip_geocity = newCollection;
                }
                return _mytrip_geocity;
            }
            set
            {
                if (!ReferenceEquals(_mytrip_geocity, value))
                {
                    var previousValue = _mytrip_geocity as FixupCollection<mytrip_geocity>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= Fixupmytrip_geocity;
                    }
                    _mytrip_geocity = value;
                    var newValue = value as FixupCollection<mytrip_geocity>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += Fixupmytrip_geocity;
                    }
                }
            }
        }
        private ICollection<mytrip_geocity> _mytrip_geocity;
    
        public virtual mytrip_geocountry mytrip_geocountry
        {
            get { return _mytrip_geocountry; }
            set
            {
                if (!ReferenceEquals(_mytrip_geocountry, value))
                {
                    var previousValue = _mytrip_geocountry;
                    _mytrip_geocountry = value;
                    Fixupmytrip_geocountry(previousValue);
                }
            }
        }
        private mytrip_geocountry _mytrip_geocountry;

        #endregion
        #region Association Fixup
    
        private void Fixupmytrip_geocountry(mytrip_geocountry previousValue)
        {
            if (previousValue != null && previousValue.mytrip_georegion.Contains(this))
            {
                previousValue.mytrip_georegion.Remove(this);
            }
    
            if (mytrip_geocountry != null)
            {
                if (!mytrip_geocountry.mytrip_georegion.Contains(this))
                {
                    mytrip_geocountry.mytrip_georegion.Add(this);
                }
                if (CountryId != mytrip_geocountry.CountryId)
                {
                    CountryId = mytrip_geocountry.CountryId;
                }
            }
        }
    
        private void Fixupmytrip_geocity(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (mytrip_geocity item in e.NewItems)
                {
                    item.mytrip_georegion = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (mytrip_geocity item in e.OldItems)
                {
                    if (ReferenceEquals(item.mytrip_georegion, this))
                    {
                        item.mytrip_georegion = null;
                    }
                }
            }
        }

        #endregion
    }
}
